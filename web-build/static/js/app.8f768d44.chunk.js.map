{"version":3,"sources":["RootNavigation.js","Helpers.js","contexts/UserContext.js","components/JarvisButton.js","navigation/LoginScreen.js","components/HeaderBar.js","navigation/AuthStack.js","navigation/HomeScreen.js","navigation/AppStack.js","navigation/MoreScreen.js","navigation/MoreStack.js","App.js"],"names":["navigationRef","createNavigationContainerRef","jarvisAlert","dt","showMessage","save","key","value","a","async","Platform","OS","localStorage","setItem","SecureStore","getValueFor","result","getItem","remove","_urlEncode","Object","entries","map","k","v","encodeURIComponent","join","UserContext","createContext","UserProvider","Provider","Consumer","styles","StyleSheet","create","button","padding","buttonText","color","JarvisButton","props","pressedAnim","useRef","Animated","Value","current","useState","isPressed","setIsPressed","useEffect","sequence","timing","toValue","duration","useNativeDriver","start","View","style","opacity","Pressable","onPress","play","backgroundColor","bgcolor","Text","btn","container","flex","alignItems","paddingLeft","validation","fontSize","fontWeight","loginLogo","marginTop","marginLeft","Dimensions","get","width","loginText","loginButton","loginButtonText","LoginScreen","ctx","useContext","buttonBackground","hasCode","setHasCode","setDiscovery","setLoginLoading","fadeAnim","_updateUser","setAtk","atk","setRtk","rtk","setU","u","setLoggedIn","loop","request","Auth0_Domain","useProxy","select","web","default","redirectUri","AuthSession","disc","oauthPayload","promptAsync","authPayload","clientId","responseType","Code","scopes","extraParams","audience","prompt","Login","authorizationEndpoint","_initLogin","params","error","helpers","type","message","error_description","code","grant_type","client_id","redirect_uri","code_verifier","codeVerifier","url","req","Request","method","headers","body","fetch","then","response","status","json","catch","console","log","hasOwnProperty","setTimeout","refresh_token","req2","response2","dt3","Authorization","access_token","response3","userInfo","JSON","stringify","MaterialCommunityIcons","name","size","flexDirection","IconButton","action","pressed","iconButton","justifyContent","borderBottomWidth","hc","height","overflow","newButton","profileButton","logoView","logoText","mainLogoView","paddingHorizontal","mainLogo","screenTitleView","screenTitle","HeaderBar","l","children","Stack","createStackNavigator","AuthStack","Navigator","initialRouteName","screenOptions","Screen","component","options","title","avatarView","avatar","borderRadius","avatarName","avatarEmail","sectionTitle","settingsView","borderTopColor","borderTopWidth","paddingTop","settingsRow","flexWrap","marginVertical","HomeScreen","navigation","ret","provider","sub","split","email","nickname","fname","given_name","lname","family_name","img","picture","items","caption","icon","Image","source","uri","i","marginRight","AppStack","headerTitle","item","centeredView","modalText","marginBottom","textAlign","modalView","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","MoreScreen","isSMVisible","setIsSMVisible","button1TextColor","setButton1TextColor","button1Background","setButton1Background","Modal","animationType","transparent","visible","onRequestClose","MoreStack","Tab","createMaterialBottomTabNavigator","App","setIsAppReady","showApp","setShowApp","loggedIn","etk","setEtk","online","setOnline","setNotification","notificationListener","responseListener","s","subscribeToNetworkChanges","NetInfo","addEventListener","state","isInternetReachable","firstView","uu","parse","Promise","resolve","e","warn","prepare","token","Constants","isDevice","Notifications","existingStatus","finalStatus","data","err","importance","MAX","vibrationPattern","lightColor","notification","irn","NavigationContainer","ref","activeColor","inactiveColor","barStyle","tabBarLabel","tabBarIcon","StatusBar","position","translucent","keyExtractor","renderItem","ii","webStyle","slide","bg","copy","bottomButton","showSkipButton","showPrevButton","onDone","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","WebBrowser","paddingBottom"],"mappings":"qPAEaA,EAAgBC,c,+HC4BtB,SAASC,EAAYC,GAE1BC,YAAYD,GAGP,SAAeE,EAAKC,EAAKC,GAAzB,SAAAC,EAAAC,OAAA,mDACa,OAAfC,IAASC,GADP,gBAEFC,aAAaC,QAAQP,EAAIC,GAFvB,wCAAAC,EAAA,MAKIM,IAAyBR,EAAKC,IALlC,4DASA,SAAeQ,EAAYT,GAA3B,eAAAE,EAAAC,OAAA,mDACDO,EAAS,KAEK,OAAfN,IAASC,GAHP,gBAIHK,EAASJ,aAAaK,QAAQX,GAJ3B,wCAAAE,EAAA,MAOYM,IAAyBR,IAPrC,OAOHU,EAPG,uCAUEA,GAVF,4DAaA,SAAeE,EAAOZ,GAAtB,SAAAE,EAAAC,OAAA,kEAAAD,EAAA,MACCM,IAA4BR,IAD7B,4DAmBA,SAASa,EAAWhB,GAIzB,OAHWiB,OAAOC,QAAQlB,GAAImB,KAC7B,2BAAEC,EAAF,KAAIC,EAAJ,YAAcC,mBAAmBF,GAAjC,IAAuCE,mBAAmBD,MACzDE,KAAK,KC9ET,IAAMC,EAAcC,wBAAc,IACrBC,EAAeF,EAAYG,SAEzBH,GADaA,EAAYI,SACzBJ,G,ynBCCf,IAyCMK,EAASC,IAAWC,OAAO,CAE7BC,OAAQ,CACJC,QAAS,GAEZC,WAAY,CACVC,MAAO,UAICC,EAnDM,SAAAC,GACjB,IAAMC,EAAeC,iBAAO,IAAIC,IAASC,MAAM,IAAIC,QACnD,EAAkCC,oBAAS,GAA3C,WAAOC,EAAP,KAAkBC,EAAlB,KAoBD,OAlBCC,qBAAU,WACHF,IACDJ,IAASO,SAAS,CAChBP,IAASQ,OAAOV,EAAY,CACzBW,QAAS,EACTC,SAAU,IACVC,iBAAiB,IAEpBX,IAASQ,OAAOV,EAAY,CAC1BW,QAAS,EACTC,SAAU,IACVC,iBAAiB,MAElBC,QACHP,GAAa,MAEf,CAACD,IAGL,cAACJ,EAAA,EAASa,KAAV,CACAC,MAAK,OAAMjB,EAAMiB,OAAZ,IAAkBC,QAASjB,IADhC,SAGC,cAACkB,EAAA,EAAD,CACSC,QAAS,WAEbZ,GAAa,GACRR,EAAMqB,QAJhB,SAOM,cAACL,EAAA,EAAD,CAAMC,MAAO,CAACzB,EAAOG,OAAO,CAAC2B,gBAAiBtB,EAAMuB,UAApD,SACM,cAACC,EAAA,EAAD,CAAMP,MAAOzB,EAAOK,WAApB,SAAiCG,EAAMyB,aCqNxD,IAAMjC,EAASC,IAAWC,OAAO,CAC/BgC,UAAW,CACTC,KAAM,EACNL,gBAAiB,OACjBM,WAAY,aACfC,YAAa,GAGZC,WAAY,CACVC,SAAU,GACbC,WAAY,OACZlC,MAAO,OAENmC,UAAW,CACZC,UAAW,GACXC,WAAYC,IAAWC,IAAI,UAAUC,MAAQ,GAE5CC,UAAW,CACVL,UAAW,GACRH,SAAU,GACbC,WAAY,QAGbQ,YAAa,CACbZ,WAAY,SACZM,UAAW,GACXC,WAAY,IAGZM,gBAAiB,KAIJC,EApRf,WACC,IAAMC,EAAMC,qBAAWzD,GACpB,EAA+CmB,mBAAS,QAAxD,WAAOuC,EAAP,KACH,GADG,KAC0CvC,mBAAS,SAAtD,WACA,GADA,UAC+BA,oBAAS,IAAxC,WACA,GADA,UAC6BA,oBAAS,IAAtC,WAAOwC,EAAP,KAAeC,EAAf,KACA,EAAiCzC,mBAAS,MAA1C,WAAiB0C,GAAjB,WACA,EAAwC1C,oBAAS,GAAjD,WAAqB2C,GAArB,WAEMC,EAAYhD,iBAAO,IAAIC,IAASC,MAAM,IAAIC,QAChD,EAAgCC,oBAAS,GAAzC,WAGS6C,GAHT,UAGuB,SAACxF,GACdgF,EAAIS,OAAOzF,EAAG0F,KACpBV,EAAIW,OAAO3F,EAAG4F,KACRZ,EAAIa,KAAK7F,EAAG8F,GACZd,EAAIe,aAAY,KAG1BjD,qBAAU,WACDN,IAASwD,KACTxD,IAASO,SAAS,CAChBP,IAASQ,OAAOuC,EAAS,CACtBtC,QAAS,EACTC,SAAU,IACVC,iBAAiB,IAEpBX,IAASQ,OAAOuC,EAAS,CACvBtC,QAAS,EACTC,SAAU,IACVC,iBAAiB,OAGzBC,WAKD,IAmBA6C,EAAgBpF,EAjBXqF,EAAe,8CAcfC,EAAW5F,IAAS6F,OAAO,CAAEC,KAAK,EAAOC,SAAS,IAClDC,EAAcC,IAA4B,CAAEL,aACjDM,EAAO,KAAoBC,EAAe,KACXC,EAAc,KAEjD7D,qBAAU,oBAAAzC,EAAAC,OAAA,mDACJ6E,EADI,uBAETC,GAAW,GAFF,WAAA/E,EAAA,MAGImG,IAAgCN,IAHpC,OAGTO,EAHS,OAITpB,EAAaoB,GAJJ,+DAQV,IAAMG,EAAc,CACnBL,YAAaA,EACbM,SA5ByB,mCA6BzBC,aAAcN,IAAyBO,KAEvCC,OAAQ,CAAC,SAAU,UAAW,kBAC9BC,YAAa,CAEXC,SAAahB,EAAL,YAEViB,OAAQX,IAAmBY,OA9EP,EAiFaZ,IACjCI,EACA,CAAES,sBA/B8BnB,0DApDZ,WAiFnBD,EAjFmB,KAiFVpF,EAjFU,KAiFF8F,EAjFE,KAsFnB,IAAMW,EAAa,WACpBX,EAAY,CAAER,cA8Hf,OArHErD,qBAAU,8BAAAzC,EAAAC,OAAA,oDACPO,EADO,mBAEN0G,EAAS1G,EAAO0G,QACf1G,EAAO2G,MAHF,uBAIVC,EAAoB,CAClBC,KAAM,SACNC,QAAS9G,EAAO0G,OAAOK,mBAAqB,2BANpC,8BAUL/G,EAAO6G,MAAuB,WAAf7G,EAAO6G,KAVjB,uBAWVD,EAAoB,CAClBC,KAAM,SACNC,QAAS,sCAbD,0BAiBNJ,EAAOM,OAKVnB,EAAe,CACJoB,WAAY,qBACrBC,UA9EqB,mCA+ErBC,aAAczB,EACdsB,KAAMN,EAAOM,KACbI,cAAehC,EAAQiC,cAKtBC,EAASjC,EAfG,eAegC,GAE1CkC,EAAM,IAAIC,QAAQF,EAAI,CAC3BG,OAAQ,OACRC,QAAS,CACR,eAAgB,qCAEjBC,KAAMf,EAAmBf,KAI1B+B,MAAML,GACFM,MAAK,SAAAC,GAEH,OAAuB,MAApBA,EAASC,OACND,EAASE,OAGT,CAACD,OAAQ,QAASjB,QAAS,sBAIrCmB,OAAM,SAAAtB,GACNuB,QAAQC,IAAI,gCAAgCxB,MAE1CkB,MAAK,SAAA1I,GAEO,GADf+I,QAAQC,IAAI,OAAOhJ,GACDA,EAAGiJ,eAAe,WAA0B,SAAbjJ,EAAG4I,OACnDnB,EAAoB,CACnBC,KAAM,SACNC,QAAQ,2EAGH,CACHrC,GAAgB,GAChB,IAEA4D,YAAW,kCAAA7I,EAAAC,OAAA,uDACPoG,EAAayC,cAAgBnJ,EAAGmJ,cAChCzC,EAAaoB,WAAa,gBACpBsB,EAAO,IAAIf,QAAQF,EAAI,CAC5BG,OAAQ,OACTC,QAAS,CACT,eAAgB,qCAEhBC,KAAMf,EAAmBf,KARlB,WAAArG,EAAA,MAUeoI,MAAMW,IAVrB,cAUHC,EAVG,kBAAAhJ,EAAA,MAW2BgJ,EAAUR,QAXrC,cAWeS,EAXf,OAYVP,QAAQC,IAAI,QAAQM,GAGPpD,EAfH,wBAAA7F,EAAA,MAgBaoI,MADVvC,uDACsB,CACTqC,QAAS,CAAEgB,cAAc,UAAWD,EAAIE,iBAjBxD,eAgBLC,EAhBK,mBAAApJ,EAAA,MAmBUoJ,EAAUZ,QAnBpB,QAmBPa,EAnBO,OAsBVjC,EAAa,SAAS6B,EAAIE,cAC1B/B,EAAa,SAAS6B,EAAIH,eAC1B1B,EAAa,OAAOkC,KAAKC,UAAUF,IAEpBlE,EAAY,CACjBM,EAAG4D,EACHhE,IAAK4D,EAAIE,aACT5D,IAAK5F,EAAGmJ,gBA7BR,+DA9HsB,KAgKjC,MAAM3B,GACLuB,QAAQC,IAAI,uBAAuBxB,QAInCsB,OAAM,SAAAtB,GACVuB,QAAQC,IAAI,2BAA2BxB,OA7G/B,8DAiHP,CAAC3G,IAKH,eAACwC,EAAA,EAAD,CAAMC,MAAOzB,EAAOkC,UAApB,UACC,cAACvB,EAAA,EAASa,KAAV,CACQC,MAAO,CAACC,QAASgC,GADzB,SAGG,cAAClC,EAAA,EAAD,CAAMC,MAAOzB,EAAOyC,UAApB,SACE,cAACuF,EAAA,QAAD,CAAwBC,KAAK,uBAAuB3H,MAAM,UAAU4H,KAAM,UAG/E,cAAC1G,EAAA,EAAD,UACG,cAACQ,EAAA,EAAD,CAAMP,MAAOzB,EAAO+C,UAApB,6GAEA,eAACvB,EAAA,EAAD,CAAMC,MAAO,CAAC0G,cAAe,OAA7B,UACH,cAAC,EAAD,CACK1G,MAAOzB,EAAOgD,YACRjB,QAASsB,EACRxB,KAAM4D,EACNxD,IAAI,UAElB,cAAC,EAAD,CACOR,MAAOzB,EAAOgD,YACRjB,QAASsB,EACRxB,KAAM4D,EACNxD,IAAI,mBCvOfmG,EAAa,SAAC5H,GAEnB,OACA,cAACmB,EAAA,EAAD,CACGC,QAASpB,EAAM6H,OACf5G,MAAO,gBAAG6G,EAAH,EAAGA,QAAH,MAAiB,CAClB,CACExG,gBAAiBwG,EACb,qBACA9H,EAAMuB,QACjBzB,MAAOgI,EACI,OACA,QAENtI,GAAOuI,aAXhB,SAcE,cAACP,EAAA,QAAD,CAAwBC,KAAMzH,EAAMyH,KAAOC,KAAM,GAAIzG,MAAO,CAAC,CAACrB,QAAS,IAAII,EAAMiB,YAsB9EzB,GAASC,IAAWC,OAAO,CAE/BgC,UAAW,CACTY,MAAOF,IAAWC,IAAI,UAAUC,MACnCqF,cAAe,MACfK,eAAgB,gBAChBC,kBAAkB,GAClB9F,YAAa,IAEZ+F,GAAI,CACHC,OAAQ,GACRC,SAAU,SACVxI,QAAS,IAEVyI,UAAW,CACZvI,MAAO,QAENwI,cAAe,CACfxI,MAAO,QAEPyI,SAAU,GAGVC,SAAU,CACT5G,WAAY,YAEb6G,aAAc,CACbT,eAAgB,SAChBpG,WAAY,SACZN,gBAAiB,UACjBoH,kBAAmB,IAEpBC,SAAU,CACT5G,SAAU,GACVjC,MAAO,QAGR8I,gBAAiB,CAClBZ,eAAgB,SAChBpG,WAAY,SACZM,UAAW,GAEV2G,YAAa,CACd9G,SAAU,MAII+G,GAhEG,SAAC9I,GAClB,OACC,eAACgB,EAAA,EAAD,CAAMC,MAAOzB,GAAOkC,UAApB,UACC,cAAC,EAAD,CAAY+F,KAAK,OAAOlG,QAAQ,UAAUsG,OAAQ,kBAAqB7H,EAAM+I,OAjC/ErC,QAAQC,IAAI,uBAiCuE1F,MAAOzB,GAAO6I,YAC/F,eAACrH,EAAA,EAAD,CAAMC,MAAO,CAAC0G,cAAe,UAA7B,UACG,cAAC3G,EAAA,EAAD,CAAMC,MAAOzB,GAAOiJ,aAApB,SACI,cAACjH,EAAA,EAAD,CAAMP,MAAOzB,GAAOmJ,SAApB,0BAEJ,cAAC3H,EAAA,EAAD,CAAMC,MAAOzB,GAAOoJ,gBAApB,SACC,cAACpH,EAAA,EAAD,CAAMP,MAAOzB,GAAOqJ,YAApB,SAAkC7I,EAAMgJ,gBAG5C,cAAC,EAAD,CAAYvB,KAAK,UAAWlG,QAAQ,UAAUsG,OAAQ,kBAAyB7H,EAAM+I,OArCvFrC,QAAQC,IAAI,2BAqC+E1F,MAAOzB,GAAO8I,oBCzCnGW,GAAQC,cAkBAC,OAff,WAEC,OACG,cAACF,GAAMG,UAAP,CACCC,iBAAiB,QACpBC,cAAe,GAFb,SAMA,cAACL,GAAMM,OAAP,CAAc9B,KAAK,QAAQ+B,UAAW9G,EAAa+G,QAAS,CAAEC,MAAO,+B,SCmDzE,IAAMlK,GAASC,IAAWC,OAAO,CAC/BgC,UAAW,CACTC,KAAM,EACNL,gBAAiB,QAGnBqI,WAAY,CACV3B,eAAgB,SAChBpG,WAAY,SACZM,UAAW,IAEb0H,OAAQ,CACNzB,OAAQ,GACR7F,MAAO,GACPuH,aAAc,IAEhBC,WAAY,CACV/H,SAAU,GACVG,UAAW,IAEb6H,YAAa,CACXhI,SAAU,GACVjC,MAAO,UACPoC,UAAW,GAEb8H,aAAc,CACZjI,SAAU,GACVjC,MAAO,UACPoC,UAAW,GACXC,WAAY,GAEd8H,aAAc,CACXrI,WAAY,aACZsI,eAAgB,UAChBC,eAAgB,EAChBjI,UAAW,EACXkI,WAAY,IAEfC,YAAa,CACXC,SAAU,OACV3C,cAAe,MACf4C,eAAgB,GAChBvC,eAAgB,mBAILwC,GA5Gf,YAAiC,EAAZC,WAAa,IAExB9H,EAAMC,qBAAWzD,GAEnBsE,ENiDD,SAAuB9F,GAC7B,IAAI+M,EAAM,GAEUC,EAARhN,EAAGiN,IAAoBC,MAAM,KASxC,OARCnE,QAAQC,IAAI,aAAagE,GACP,iBAAfA,EAAS,KACVD,EAAII,MAAWnN,EAAGoN,SAAlB,aACAL,EAAIM,MAAQrN,EAAGsN,WACfP,EAAIQ,MAAQvN,EAAGwN,YACfT,EAAIU,IAAMzN,EAAG0N,SAGTX,EM7DGtF,CAAsBzC,EAAIc,GAsB3B6H,EAAQ,CACb,CAACxN,IAAK,SAAUyN,QAAS,kBAAmB9J,IAAK,SAAU+J,KAAM,wBAAyBnK,KApBnE,WACvBqF,QAAQC,IAAI,yBAoBZ,CAAC7I,IAAK,SAAUyN,QAAS,2BAA4B9J,IAAK,WAAY+J,KAAM,SAAUnK,KAjBvE,WAChBqF,QAAQC,IAAI,iBAGZvB,EAAe,UACfA,EAAe,UACfA,EAAe,QAGfzC,EAAIS,OAAO,MACXT,EAAIW,OAAO,MACPX,EAAIa,KAAK,MACTb,EAAIe,aAAY,MASrB,OACF,eAAC1C,EAAA,EAAD,CAAMC,MAAOzB,GAAOkC,UAApB,UACI,eAACV,EAAA,EAAD,CAAMC,MAAOzB,GAAOmK,WAApB,UACG,cAAC8B,GAAA,EAAD,CAAOxK,MAAOzB,GAAOoK,OAAQ8B,OAAQ,CAACC,IAAKlI,EAAE2H,OAC7C,cAAC5J,EAAA,EAAD,CAAMP,MAAOzB,GAAOsK,WAApB,SAAiCrG,EAAEuH,MAAQ,IAAMvH,EAAEyH,QACnD,cAAC1J,EAAA,EAAD,CAAMP,MAAOzB,GAAOuK,YAApB,SAAkCtG,EAAEqH,WAEvC,cAACtJ,EAAA,EAAD,CAAMP,MAAOzB,GAAOwK,aAApB,sBACA,cAAChJ,EAAA,EAAD,CAAMC,MAAOzB,GAAOyK,aAApB,SAEIqB,EAAMxM,KAAK,SAAA8M,GAAC,OACV,eAAC5K,EAAA,EAAD,CAAkBC,MAAO,CAACzB,GAAO6K,aAAjC,UACG,cAAC7C,EAAA,QAAD,CAAwBvG,MAAO,CAAC4K,YAAa,IAAKpE,KAAMmE,EAAEJ,KAAM1L,MAAM,UAAU4H,KAAM,KACtF,cAAClG,EAAA,EAAD,CAAMP,MAAO,CAAC4K,YAAa,IAA3B,SAAiCD,EAAEL,UACnC,cAAC,EAAD,CACCtK,MAAO,CAACkB,WAAY,IACpBZ,QAAQ,UACPF,KAAMuK,EAAEvK,KACRI,IAAKmK,EAAEnK,QAPDmK,EAAE9N,c,+NC5CxB,IAAMmL,GAAQC,cAkBA4C,OAff,WAEC,OACG,cAAC,GAAM1C,UAAP,CACCC,iBAAiB,OACpBC,cAAe,CACTyC,YAAa,SAAC/L,GAAD,OAAW,cAAC,G,mWAAD,IAAeA,MAH3C,SAMA,cAAC,GAAMuJ,OAAP,CAAc9B,KAAK,YAAYiC,MAAM,UAAUF,UAAWgB,Q,UCoG9D,IAAMhL,GAASC,IAAWC,OAAO,CAC/BgC,UAAW,CACZJ,gBAAiB,OAEjBgB,MAAO,OACP6F,OAAQ,OACRxG,KAAM,GAELqK,KAAM,CACLrK,KAAM,EACL/B,QAAS,EACZ+H,cAAe,MACfrG,gBAAiB,OACjB0G,eAAgB,iBAEbuD,QAAS,CACTxJ,SAAU,GACbC,WAAY,QAITiK,aAAc,CACdtK,KAAM,EACNqG,eAAgB,SAChBpG,WAAY,SACZM,UAAW,IAEXgK,UAAW,CACXC,aAAc,GACdC,UAAW,UAEbC,UAAW,CACTC,OAAQ,GACRhL,gBAAiB,QACjBuI,aAAc,GACdjK,QAAS,GACTgC,WAAY,SACZ2K,YAAa,OACbC,aAAc,CACZlK,MAAO,EACP6F,OAAQ,GAEVsE,cAAe,IACfC,aAAc,KACdC,UAAW,GAEbhN,OAAQ,CACNiC,WAAY,SACZM,UAAW,GACXtC,QAAS,GACTE,MAAO,OACPwC,MAAOF,IAAWC,IAAI,UAAUC,MAAM,MAK3BsK,GAzKf,WAEahK,qBAAWzD,GAAvB,IAIA,EAAsCmB,oBAAS,GAA/C,WAAOuM,EAAP,KAAoBC,EAApB,KACG,EAAgDxM,mBAAS,QAAzD,WAAOyM,EAAP,KAAyBC,EAAzB,KACA,EAAkD1M,mBAAS,UAA3D,WAAO2M,EAAP,KAA0BC,EAA1B,KACA,EAAgD5M,mBAAS,QAAzD,WACA,GADA,UACkDA,mBAAS,UAA3D,WAmBGgL,GAnBH,UAmBW,CACb,CAACxN,IAAK,SAAUyN,QAAS,kCAAmC9J,IAAK,QAASJ,KA3BhE,WACVqF,QAAQC,IAAI,cA2BZ,CAAC7I,IAAK,SAAUyN,QAAS,2BAA4B9J,IAAK,WAAYJ,KAnBhD,WACtByL,GAAe,OAqBhB,OACG,eAAC9L,EAAA,EAAD,CAAMC,MAAOzB,GAAOkC,UAApB,UACC,cAACF,EAAA,EAAD,CAAMP,MAAOzB,GAAO+L,QAApB,0BAEFD,EAAMxM,KAAI,SAAA8M,GAAC,OACL,eAAC5K,EAAA,EAAD,CAAkBC,MAAOzB,GAAOwM,KAAhC,UACH,cAACxK,EAAA,EAAD,CAAMP,MAAO,CAAC4K,YAAa,GAA3B,SAAgCD,EAAEL,UACzB,cAACpK,EAAA,EAAD,CACVC,QAAS,WAETsF,QAAQC,IAAI,YACZiF,EAAEvK,QAEMJ,MAAO,CAACqB,MAAM,GAAG6F,OAAO,IANtB,SAQR,cAACnH,EAAA,EAAD,CAAMC,MAAO,CAACzB,GAAOgD,YAAY,CAAClB,gBAAiB,YAAnD,SACF,cAACE,EAAA,EAAD,CAAMP,MAAO,CAACzB,GAAOiD,gBAAgB,CAAC3C,MAAO,SAA7C,SAAwD8L,EAAEnK,YAX3CmK,EAAE9N,QAmBjB,cAACqP,GAAA,EAAD,CACGC,cAAc,QACdC,aAAa,EACbC,QAAST,EACTU,eAAgB,aAJnB,SAOG,cAACvM,EAAA,EAAD,CAAMC,MAAOzB,GAAOyM,aAApB,SACE,eAACjL,EAAA,EAAD,CAAMC,MAAOzB,GAAO6M,UAApB,UACE,cAAC7K,EAAA,EAAD,CAAMP,MAAOzB,GAAO0M,UAApB,2BACC,eAAClL,EAAA,EAAD,CAAMC,MAAO,CAAC0G,cAAe,MAAOK,eAAgB,iBAApD,UACA,cAAC7G,EAAA,EAAD,CACRC,QAAS,WAETsF,QAAQC,IAAI,YACZuG,EAAqB,QACrBF,EAAoB,UACpBnG,YAAW,WACZqG,EAAqB,UACrBF,EAAoB,UACjB,KA1DW,EAAAhP,EAAAC,OAAA,gDAEjB,IACEkG,MACG,MAAOgB,GACPuB,QAAQvB,MAAMA,GALF,6DA6DLlE,MAAO,CAACqB,MAAM,GAAG6F,OAAO,IAZxB,SAcN,cAACnH,EAAA,EAAD,CAAMC,MAAO,CAACzB,GAAOG,OAAO,CAAC2B,gBAAiB2L,IAA9C,SACF,cAACzL,EAAA,EAAD,CAAMP,MAAO,CAACnB,MAAOiN,GAArB,qBAGM,cAAC5L,EAAA,EAAD,CACNC,QAAS,WAETsF,QAAQC,IAAI,YACZuG,EAAqB,QACrBF,EAAoB,SACpBnG,YAAW,WACZqG,EAAqB,SACrBF,EAAoB,UACjB,KACOF,GAAe,IAEhB7L,MAAO,CAACqB,MAAM,GAAG6F,OAAO,IAZ1B,SAcJ,cAACnH,EAAA,EAAD,CAAMC,MAAO,CAACzB,GAAOG,OAAO,CAAC2B,gBAAiB2L,IAA9C,SACF,cAACzL,EAAA,EAAD,CAAMP,MAAO,CAACnB,MAAOiN,GAArB,kC,+NCrGJ,IAAM9D,GAAQC,cAkBAsE,OAff,WAEC,OACG,cAAC,GAAMpE,UAAP,CACCC,iBAAiB,OACpBC,cAAe,CACTyC,YAAa,SAAC/L,GAAD,OAAW,cAAC,G,mWAAD,IAAeA,MAH3C,SAMA,cAAC,GAAMuJ,OAAP,CAAc9B,KAAK,OAAO+B,UAAWoD,QCEnCa,GAAMC,cAYG,SAASC,KACtB,MAAoCrN,oBAAS,GAA7C,WAAmBsN,GAAnB,WACA,EAA6BtN,oBAAS,GAAtC,WAAOuN,EAAP,KAAeC,EAAf,KACA,EAAgCxN,oBAAS,GAAzC,WAAOyN,EAAP,KAAiBrK,EAAjB,KACA,EAAkBpD,mBAAS,MAA3B,WAAOmD,EAAP,KAAUD,EAAV,KACA,EAAwBlD,mBAAS,MAAjC,WACA,GADA,UACsBA,mBAAS,OAA/B,WAAO+C,EAAP,KAAYD,EAAZ,KACA,EAAsB9C,mBAAS,MAA/B,WAAOiD,EAAP,KAAYD,EAAZ,KACA,EAAsBhD,mBAAS,IAA/B,WAAO0N,EAAP,KAAYC,EAAZ,KACD,EAA4B3N,oBAAS,GAArC,YAAO4N,GAAP,MAAeC,GAAf,MACC,GAAwC7N,oBAAS,GAAjD,aAAqB8N,IAArB,aACMC,GAAuBnO,mBACvBoO,GAAmBpO,mBACrBqO,GAAI,KAoDFC,GAA4BC,IAAQC,kBAAiB,SAAAC,IACzDJ,GAAII,EAAMC,sBACAV,KACRC,GAAUI,IACNA,KACE,yBAAgC,cAYpC5L,GAAM,CACJoL,SAAUA,EACVrK,YAAaA,EACbsK,IAAKA,EACLC,OAAQA,EACR5K,IAAKA,EACLD,OAAQA,EACRG,IAAKA,EACLD,OAAQA,EACRG,EAAGA,EACHD,KAAMA,EACN0K,OAAQA,GACRC,UAAWA,IAGjB1N,qBAAU,YACR,6BAAAzC,EAAAC,OAAA,2EAAAD,EAAA,MAGgBoH,EAAoB,WAHpC,cAGI7B,EAHJ,kBAAAvF,EAAA,MAGiEoH,EAAoB,kBAHrF,cAG+CyJ,EAH/C,OAIIC,EAAK,KAAoB,KAE1BD,GAA0B,SAAbA,GAAsBf,GAAW,GANjD,qBAAA9P,EAAA,MAUWoH,EAAoB,SAV/B,aAUA0J,EAVA,4BAaY,MAAPvL,GAAqB,MAANuL,EAbpB,uBAoBiBjL,0DAEPkC,EAAM,IAAIC,QAFHnC,0DAEe,CAC1BoC,OAAQ,OACTC,QAAS,CACR,eAAgB,qCAEjBC,KAAMf,EAZgB,CACrBK,WAAY,gBACZC,UAlGc,mCAmGdoB,cAAevD,MAlBrB,YAAAvF,EAAA,MA6B0BoI,MAAML,IA7BhC,eA6BQiB,EA7BR,mBAAAhJ,EAAA,MA8BmBgJ,EAAUR,QA9B7B,QA8BQ7I,EA9BR,OA+BI+I,QAAQC,IAAI,mBAAmBhJ,GAC9ByH,EAAa,SAASzH,EAAGwJ,cACzB/B,EAAa,SAASzH,EAAGmJ,eACzB1D,EAAOzF,EAAGwJ,cACV3D,EAAK8D,KAAKyH,MAAMD,IAChBpL,GAAY,GApCjB,gCAyCGgD,QAAQC,IAAI,yBAzCf,0DA6CAD,QAAQC,IAAI,oBAAZ,MA7CA,2BAAA3I,EAAA,MAmDU,IAAIgR,SAAQ,SAAAC,GAAO,OAAIpI,WAAWoI,EAAS,SAnDrD,QAsDA,IAEMT,KAEN,MAAMU,GACJxI,QAAQyI,KAAKD,GA3Df,kDAgEIxI,QAAQyI,KAAR,MAhEJ,yBAmEIvB,GAAc,GAnElB,2FAuEAwB,KACC,IAEH3O,qBAAU,WACR,GAAGyN,GAeH,OVrHC,oCAAAlQ,EAAAC,OAAA,mDACDoR,EAAQ,IAAUC,IAAUC,SAD3B,mCAAAvR,EAAA,MAIsCwR,OAJtC,mBAIaC,EAJb,EAIKlJ,OACJmJ,EAAcD,EAEK,YAAnBA,EAPD,oCAAAzR,EAAA,MAQwBwR,OARxB,iBAQOjJ,EARP,EAQOA,OACRmJ,EAAcnJ,EATb,QAYgB,WAAfmJ,GACFF,MACFnJ,MAAK,SAAAsJ,GAIJ9R,EAAK,SADNwR,EAAQM,EAAKA,SAGblJ,OAAM,SAAAmJ,OApBH,8BAiCe,YAAhB1R,IAASC,IACXqR,IAA0C,UAAW,CACnD/H,KAAM,UACNoI,WAAYL,IAAgCM,IAC5CC,iBAAkB,CAAC,EAAG,IAAK,IAAK,KAChCC,WAAY,cAtCX,kBA2CEX,GA3CF,6DUuGDjK,GAA4CiB,MAAK,SAAAgJ,OAMjDhB,GAAqBhO,QAAUmP,KAA8C,SAAAS,GAC3E7B,GAAgB6B,MAGlB3B,GAAiBjO,QAAUmP,KAAsD,SAAAlJ,GAC/EI,QAAQC,IAAI,aAAaL,MAGpB,WACLkJ,IAA6CnB,GAAqBhO,SAClEmP,IAA6ClB,GAAiBjO,YAG/D,CAAC6N,KAGN,IAAIgC,GAAMnC,EAAW,WAAa,YAElC,OAAGF,EAEC,eAACxO,EAAD,CAActB,MAAO4E,GAArB,UACF,cAACwN,EAAA,EAAD,CAAqBC,IAAK5S,EAA1B,SACG,cAACiQ,GAAIrE,UAAL,CACAC,iBAAkB6G,GAChBG,YAAY,UACZC,cAAc,UACdC,SAAU,CAAEjP,gBAAiB,WAJ/B,SAODyM,EACD,qCACA,cAACN,GAAIlE,OAAL,CACI9B,KAAK,WACL+B,UAAWsC,GACXrC,QAAS,CACP+G,YAAa,YACbC,WAAY,gBAAG3Q,EAAH,EAAGA,MAAH,OACV,cAAC0H,EAAA,QAAD,CAAwBC,KAAK,iBAAiB3H,MAAOA,EAAO4H,KAAM,SAIxE,cAAC+F,GAAIlE,OAAL,CACE9B,KAAK,YACL+B,UAAWgE,GACX/D,QAAS,CACP+G,YAAa,OACbC,WAAY,gBAAG3Q,EAAH,EAAGA,MAAH,OACV,cAAC0H,EAAA,QAAD,CAAwBC,KAAK,yBAAyB3H,MAAOA,EAAO4H,KAAM,YAQjF,cAAC+F,GAAIlE,OAAL,CACG9B,KAAK,YACL+B,UAAWL,GACXM,QAAS,CACP+G,YAAa,QACbC,WAAY,gBAAG3Q,EAAH,EAAGA,MAAH,OACV,cAAC0H,EAAA,QAAD,CAAwBC,KAAK,UAAU3H,MAAOA,EAAO4H,KAAM,aAQnE,cAACgJ,EAAA,EAAD,CAAWzP,MAAM,SACf,cAAC,IAAD,CAAc0P,SAAS,cAMxB,qCACA,eAAC3P,EAAA,EAAD,CAAMC,MAAO,CAACU,KAAM,GAApB,UACE,cAAC+O,EAAA,EAAD,CAAWE,aAAW,EAACtP,gBAAgB,gBACvC,cAAC,IAAD,CACEuP,aAtMe,SAAA7E,GAAI,OAAIA,EAAKtC,OAuM5BoH,WApNa,SAAA9E,GACjB,IAAI+E,EAAK/E,EAAKA,KACRgF,EAA0B,OAAf9S,IAASC,GAAc,CAACgK,OAAQ,QAAU,KAE3D,OACE,eAACnH,EAAA,EAAD,CAAMC,MAAO,CAACzB,GAAOyR,MAAM,CAAC3P,gBAAiByP,EAAGG,IAAIF,GAApD,UACI,cAACxJ,EAAA,QAAD,CAAwBC,KAAMsJ,EAAGvF,KAAM1L,MAAM,OAAO4H,KAAM,MAC1D,cAAClG,EAAA,EAAD,CAAMP,MAAOzB,GAAOkK,MAApB,SAA4BqH,EAAGrH,QAC/B,cAAClI,EAAA,EAAD,CAAMP,MAAOzB,GAAO2R,KAApB,SAA2BJ,EAAGI,WA6MhCC,cAAY,EACZC,gBAAc,EACdC,gBAAc,EACd3B,KA7OK,CACb,CACEjG,MAAO,UACL8B,KAAM,OACR2F,KAAM,uCACND,GAAI,WAEN,CACExH,MAAO,UACL8B,KAAM,gBACR2F,KAAM,wCACND,GAAI,WAEN,CACExH,MAAO,UACL8B,KAAM,gBACR2F,KAAM,uCACND,GAAI,YA6NEK,OAAQ,WAAOzD,GAAW,GAAO1I,EAAa,gBAAgB,eAGlE,cAACsL,EAAA,EAAD,CAAWzP,MAAM,YAvRvBuO,IAAqC,CACnCgC,mBAAoB,oBAAAxT,EAAAC,OAAA,yEAAa,CAC/BwT,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAgB,IAHE,+DAOtBC,MAqRA,IAAMpS,GAASC,IAAWC,OAAO,CAC/BgC,UAAW,CACTC,KAAM,EACNC,WAAY,SACZoG,eAAgB,UAElBiJ,MAAO,CACLtP,KAAM,EACNC,WAAY,SACZoG,eAAgB,SAChB6J,cAAe,IAEjBnI,MAAO,CACL3H,SAAU,GACVjC,MAAO,QACPsM,UAAW,SACXlK,UAAW,IAEbiP,KAAM,CACJpP,SAAU,GACVjC,MAAO,QACPsM,UAAW,SACXlK,UAAW,O","file":"static/js/app.8f768d44.chunk.js","sourcesContent":["import { createNavigationContainerRef } from '@react-navigation/native';\n\nexport const navigationRef = createNavigationContainerRef()\n\nexport function navigate(name, params) {\n  if (navigationRef.isReady()) {\n    navigationRef.navigate(name, params);\n  }\n}\n\n// add other navigation functions that you need and export them","import React, { useState, useEffect } from 'react';\nimport { Platform, StyleSheet, View, Text, Alert} from 'react-native';\nimport * as SecureStore from 'expo-secure-store';\nimport * as AuthSession from 'expo-auth-session';\nimport * as Notifications from 'expo-notifications';\nimport Constants from 'expo-constants';\nimport { useNavigation } from '@react-navigation/native';\nimport * as RootNavigation from './RootNavigation.js';\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\n\nexport const API = \"\";\n\n\nexport function tryParseJSON(jsonString){\n    try {\n        var o = JSON.parse(jsonString);\n\n        // Handle non-exception-throwing cases:\n        // Neither JSON.parse(false) or JSON.parse(1234) throw errors, hence the type-checking,\n        // but... JSON.parse(null) returns null, and typeof null === \"object\", \n        // so we must check for that, too. Thankfully, null is falsey, so this suffices:\n        if (o && typeof o === \"object\") { \n            return o;\n        }\n    }\n    catch (e) { }\n\n    return false;\n}\n\nexport function jarvisAlert(dt)\n{\n  showMessage(dt);\n}\n\nexport async function save(key, value) {\n  if(Platform.OS == \"web\"){\n     localStorage.setItem(key,value);\n  }\n  else{\n     await SecureStore.setItemAsync(key, value);\n  }\n}\n\nexport async function getValueFor(key) {\n  let result = null;\n\n  if(Platform.OS == \"web\"){\n    result = localStorage.getItem(key);\n  } \n  else{\n    result = await SecureStore.getItemAsync(key);\n  }\n\n  return result;\n}\n\nexport async function remove(key) {\n  await SecureStore.deleteItemAsync(key);\n}\n\nexport function parseUserData(dt) {\n\tlet ret = {};\n   //First get the sub\n   let sub = dt.sub, provider = sub.split('|');\n   console.log(\"provider: \",provider);\n   if(provider[0] == \"google-oauth2\"){\n     ret.email = `${dt.nickname}@gmail.com`;\n     ret.fname = dt.given_name;\n     ret.lname = dt.family_name;\n     ret.img = dt.picture;\n   }\n\t\n  return ret;\n}\n\nexport function _urlEncode(dt){\n\t\tconst fd = Object.entries(dt).map(\n\t\t\t([k,v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`\n\t\t).join(\"&\");\n\t\treturn fd;\n}\n\nexport async function setCredentials(dt) {\n\tawait Keychain.setGenericPassword(dt.u,dt.p);\n}\n\nexport function serializeJSON(data) {\n  return Object.keys(data).map(function (keyName) {\n    return encodeURIComponent(keyName) + '=' + encodeURIComponent(data[keyName])\n  }).join('&');\n}\n\nexport async function schedulePushNotification() {\n  await Notifications.scheduleNotificationAsync({\n    content: {\n      title: \"You've got mail! 📬\",\n      body: 'Here is the notification body',\n      data: { data: 'goes here' },\n    },\n    trigger: { seconds: 2 },\n  });\n}\n\nexport async function registerForPushNotificationsAsync() {\n  let token = \"\", cid = Constants.isDevice;\n\n  if (cid) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n\t\t  // alert(`In registerForPushNotificationsAsync(), finalStatus = ${finalStatus}`);\n    if (finalStatus == 'granted') {\n      Notifications.getExpoPushTokenAsync()\n\t  .then(data => {\n\t\t  //alert(`In getExpoPushTokenAsync(), data = ${data}`);\n\t\t // console.log(` data: `,data);\n\t\t  token = data.data;\n\t\t  \tsave('pa_etk',token); \n\t  })\n\t  .catch(err => {\n\t\t // alert(`In getExpoPushTokenAsync(), err = ${err}`);\n\t  });\n    }\n\telse {\n\t\t//alert('Failed to get push token for push notification!');\n\t}\n    \n    //console.log(token);\n  } else {\n    //alert('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n  \n  //alert(`In registerForPushNotificationsAsync(), token: ${token}`);\n  return token;\n}\n\nexport function findItem(l,x){\n\tconsole.log(\"[l,x]: \",[l,x]);\n\treturn l.find(i => i.id == x);\n}\n\nexport function wvParse(s){\n\t let r = \"\";\n\t const regex = /(html)|(device-width)/;\n\t let sr = s.search(regex);\n\t   // console.log('sr: ',sr);\n\t if(sr == -1){\n\t\t r = `\n\t\t <html xmlns=\"http://www.w3.org/1999/xhtml\">\n  <head>\n  </head>\n  <body style=\"max-width:100%; width:100%;background-color:white;\">\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1\" />\n    <meta name=\"color-scheme\" content=\"only\" />\n\t${s}\n\t</body>\n\t</html>\n\t\t `;\n\t }\n\t else{\n\t\t r = s;\n\t }\n\t return r;\n }\n\nexport async function clearStorage(){\n\tawait remove(\"tembo_current_u\");\n}\n","import React,{createContext} from 'react';\nconst UserContext = createContext({});\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;\nexport default UserContext;","import React, {useRef, useState, useEffect} from 'react';\nimport {StatusBar, StyleSheet, Animated, Pressable, View, Text } from 'react-native';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport * as RootNavigation from '../RootNavigation.js';\n\nconst JarvisButton = props => {\n    const pressedAnim =  useRef(new Animated.Value(1)).current;\n    const [isPressed, setIsPressed] = useState(false);\n\n    useEffect(() => {\n        if(isPressed){\n          Animated.sequence([\n            Animated.timing(pressedAnim,{\n               toValue: 0,\n               duration: 100,\n               useNativeDriver: true\n            }),\n            Animated.timing(pressedAnim,{\n              toValue: 1,\n              duration: 100,\n              useNativeDriver: true\n            })\n          ]).start();\n          setIsPressed(false)\n        }\n      },[isPressed]);\n\n   return (\n    <Animated.View\n    style={{...props.style,opacity: pressedAnim}}\n    >\n     <Pressable\n              onPress={() => {\n          /** Do Something **/\n          setIsPressed(true);\n               props.play();\n        }}\n     >\n           <View style={[styles.button,{backgroundColor: props.bgcolor}]}>\n                 <Text style={styles.buttonText}>{props.btn}</Text>\n             </View>\n     </Pressable>\n    </Animated.View>\n   );\n}\n\nconst styles = StyleSheet.create({\n    \n    button: {\n        padding: 8       \n     },\n     buttonText: {\n       color: \"#fff\"\n     }\n  });\n\nexport default JarvisButton;","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { Platform, Animated, StyleSheet, View, Text, TextInput, Dimensions } from 'react-native';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport * as AuthSession from 'expo-auth-session';\nimport * as helpers from '../Helpers';\nimport UserContext from '../contexts/UserContext';\nimport JarvisButton from '../components/JarvisButton';\n\n\nfunction LoginScreen(){\n\tconst ctx = useContext(UserContext);\n    const [buttonBackground,setButtonBackground] = useState(\"#77f\");\n\tconst [buttonTextColor,setButtonTextColor] = useState(\"#fff\");\n\tconst [tryLogin,setTryLogin] = useState(true);\n\tconst [hasCode,setHasCode] = useState(false);\n\tconst [discovery,setDiscovery] = useState(null);\n\tconst [loginLoading, setLoginLoading] = useState(false);\n\t\n\tconst fadeAnim =  useRef(new Animated.Value(1)).current;\n\tconst [isFading, setIsFading] = useState(false);\n\n\n    const _updateUser = (dt) => {\n\t\t         ctx.setAtk(dt.atk);\n\t\t\t\t ctx.setRtk(dt.rtk);\n\t\t         ctx.setU(dt.u);\n\t\t         ctx.setLoggedIn(true);\n\t}\n\n\tuseEffect(() => {\n          Animated.loop(\n          Animated.sequence([\n            Animated.timing(fadeAnim,{\n               toValue: 0,\n               duration: 500,\n               useNativeDriver: true\n            }),\n            Animated.timing(fadeAnim,{\n              toValue: 1,\n              duration: 500,\n              useNativeDriver: true\n            })\n          ])\n\t\t  ).start();\n\t\t  //setIsFading(false);\n\t    \n      });\n\n     const requestNewAccessTokenBuffer = 5 * 1000;\n\t //Development config\n    const Auth0_Domain = \"https://pensionjar-development.eu.auth0.com\";\n    const Auth0_ClientID = \"LFi1MZQxXQW4Y1vMhEOXN7Sy11naYTcF\";\n\tconst Auth0_ClientSecret = \"b8fUvWYThhkLxOf4d_UsGLBayfl1pCnQTkll9U8qtHrB6VPyFsfeIH7CRdcKhh9-\";\n\n\t/**\n\t//Staging config\n    const Auth0_Domain = \"https://pensionjar-staging.eu.auth0.com\";\n    const Auth0_ClientID = \"PAQK5rFTPu2jdg2rSM4I0Nwjcwk8XWkI\";\n\tconst Auth0_ClientSecret = \"_-NCxLhpJlg5q8J6K2LYKyi_1CNu8uwbrU-X0s3IkxiLj3jhCjF37FdquZK78gUM\";\n    **/\n\n\tconst authorizationEndpoint = `${Auth0_Domain}/authorize`;\n\tconst oauthEndpoint = `${Auth0_Domain}/oauth/token`;\n\n    const useProxy = Platform.select({ web: false, default: true });\n    const redirectUri = AuthSession.makeRedirectUri({ useProxy });\n\tlet disc = null, auth0 = null, oauthPayload = null,\n\t    request = null, result = null, promptAsync = null;\n    \n\tuseEffect(async () => {\n\t  if(!hasCode){\n\t\tsetHasCode(true);\n\t\tdisc = await AuthSession.fetchDiscoveryAsync(Auth0_Domain);\n\t\tsetDiscovery(disc);\n\t  }\n\t});\n\t\n\tconst authPayload = {\n\t\tredirectUri: redirectUri,\n\t\tclientId: Auth0_ClientID,\n\t\tresponseType: AuthSession.ResponseType.Code,\n\t\t// retrieve the user's profile\n\t\tscopes: [\"openid\", \"profile\", \"offline_access\"],\n\t\textraParams: {\n\t\t  // ideally, this will be a random value\n\t\t  audience: `${Auth0_Domain}/api/v2/`\n\t\t},\n\t\tprompt: AuthSession.Prompt.Login\n\t  };\n\n\t [request, result, promptAsync] = AuthSession.useAuthRequest(\n\t\tauthPayload,\n\t\t{ authorizationEndpoint }\n\t  );\n\n\t  const _initLogin = () => {\n\t\tpromptAsync({ useProxy });\n\t  }\n    \n\n\t// Retrieve the redirect URL, add this to the callback URL list\n\t  // of your Auth0 application.\n\t  //console.log(`Redirect URL: ${redirectUri}`);\n\t  \n\n\t  useEffect(async () => {\n\t\tif (result) {\n\t\t\tlet params = result.params;\n\t\t  if (result.error) {\n\t\t\thelpers.jarvisAlert({\n\t\t\t  type: \"danger\",\n\t\t\t  message: result.params.error_description || \"Something went wrong..\"\n\t\t\t});\n\t\t\treturn;\n\t\t  }\n\t\t  if (result.type && result.type == \"dismiss\") {\n\t\t\thelpers.jarvisAlert({\n\t\t\t  type: \"danger\",\n\t\t\t  message: \"Your login attempt was dismissed.\"\n\t\t\t});\n\t\t\treturn;\n\t\t  }\n\t\t  if(params.code){\n\t\t\t//Exchange the authorization code for access and id tokens\n\t\t\n\t\t\t//Send POST request\n           \n\t\t\t oauthPayload = {\n               grant_type: \"authorization_code\",\n\t\t\t   client_id: Auth0_ClientID,\n\t\t\t   redirect_uri: redirectUri,\n\t\t\t   code: params.code,\n\t\t\t   code_verifier: request.codeVerifier\n\t\t\t};\n\n\t\t\t\n\t\t\t//create request\n\t\t\tlet url = `${Auth0_Domain}/oauth/token`, dest = \"\";\n\t\t\t\t   \n\t\t\tconst req = new Request(url,{\n\t\t\t\tmethod: 'POST', \n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t  },\n\t\t\t\tbody: helpers._urlEncode(oauthPayload)\n\t\t\t});\n\t\t\t\n\t\t\t//fetch request\n\t\t\tfetch(req)\n\t\t\t   .then(response => {\n\n\t\t\t\t     if(response.status === 200){\n\t\t\t\t\t   return response.json();\n\t\t\t\t   }\n\t\t\t\t   else{\n\t\t\t\t\t   return {status: \"error\", message: \"Technical error\"};\n\t\t\t\t   }\n\t\t\t\t   \n\t\t\t   })\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.log(\"Failed first to fetch token: \",error);\t\n\t\t\t   })\n\t\t\t   .then(dt => {\t\n\t\t\t\tconsole.log(\"dt: \",dt);\t\t\t  \n                   if(dt.hasOwnProperty('status') && dt.status == \"error\"){\n\t\t\t\t\thelpers.jarvisAlert({\n\t\t\t\t\t\ttype: \"danger\",\n\t\t\t\t\t\tmessage: `There was an issue with verifying your identity, please try again.`\n\t\t\t\t\t  });\n\t\t\t\t   }\n\t\t\t\t   else{\n\t\t\t\t\t   setLoginLoading(true);\n\t\t\t\t\t   try{\n\t\t\t\t       // Refetch the access token before it expires\n\t\t\t\t\t   setTimeout(async () => {\n\t\t\t\t\t\t\t     oauthPayload.refresh_token = dt.refresh_token;\n\t\t\t\t\t\t\t     oauthPayload.grant_type = \"refresh_token\";\n\t\t\t\t\t\t\t     const req2 = new Request(url,{\n\t\t\t\t\t\t\t     \tmethod: 'POST', \n\t\t\t\t\t\t\t\t    headers: {\n\t\t\t\t\t\t\t\t\t   'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t\t\t\t\t    },\n\t\t\t\t\t\t\t\t    body: helpers._urlEncode(oauthPayload)\n\t\t\t\t\t\t\t       });\n\t\t\t\t\t\t\t     let response2 = await fetch(req2);\n\t                             let dt3 = await response2.json();\n\t\t\t\t\t\t\t\t console.log(\"dt3: \",dt3);\n\n\t\t\t\t\t\t\t //Get the user info\n\t\t\t\t\t\t\t let url3 = `${Auth0_Domain}/userinfo`;\n\t\t\t\t\t\t\t const response3 = await fetch(url3, {\n                                   headers: { Authorization: `Bearer ${dt3.access_token}` },\n                                });\n\t\t\t\t\t\t\t\tlet userInfo = await response3.json();\n\t\t\t\t\t\t\t\t\n                              //Save user info, access token, refresh token and update user context\n\t\t\t\t\t\t\t  helpers.save('pa_atk',dt3.access_token);\n\t\t\t\t\t\t\t  helpers.save('pa_rtk',dt3.refresh_token);\n\t\t\t\t\t\t\t  helpers.save('pa_u',JSON.stringify(userInfo));\n\n\t\t                      _updateUser({\n\t\t\t\t\t              u: userInfo,\n\t\t\t\t\t              atk: dt3.access_token,\n\t\t\t\t\t              rtk: dt.refresh_token\n\t\t\t\t              });\n\n\t\t\t\t\t        },requestNewAccessTokenBuffer);\n\t\t\t\t\t   }\n\t\t\t\t\t   catch(error){\n\t\t\t\t\t\t   console.log(\"error in try block: \",error);\n\t\t\t\t\t   }\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t   }).catch(error => {\n\t\t\t\t\tconsole.log(\"Failed to fetch tokens: \",error);\n\t\t\t   });\n\t\t  }\n\t    }\n\t  }, [result]);\n\n    \n\n\treturn (\n\t   <View style={styles.container}>\n\t\t   <Animated.View\n             style={{opacity: fadeAnim}}\n           >\n\t\t      <View style={styles.loginLogo}>\n\t\t        <MaterialCommunityIcons name=\"pause-circle-outline\" color=\"#FFA500\" size={200} />\n\t\t      </View>\n           </Animated.View>\n\t\t   <View>\n\t\t      <Text style={styles.loginText}>You need to login to continue to PensionJar. Click any of the button below when you're ready!</Text>\n\t\t   </View>\n\t       <View style={{flexDirection: \"row\"}}>\n\t\t   <JarvisButton\n\t\t        style={styles.loginButton}\n                bgcolor={buttonBackground}\n                 play={_initLogin}\n                 btn=\"Login\"\n            />\n\t\t\t<JarvisButton\n\t\t        style={styles.loginButton}\n                bgcolor={buttonBackground}\n                 play={_initLogin}\n                 btn=\"Sign up\"\n            />\n\t\t\t</View>\n\t   </View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n\tpaddingLeft: 5,\n    //justifyContent: 'center',\n  },\n  validation: {\n    fontSize: 16,\n\tfontWeight: \"bold\",\n\tcolor: \"red\"\n  },\n  loginLogo: {\n\tmarginTop: 30,\n\tmarginLeft: Dimensions.get('window').width / 6\n  },\n  loginText: {\n\t  marginTop: 30,\n      fontSize: 16,\n\t  fontWeight: \"bold\",\n\t // padding: 10\n  },\n  loginButton: {\n\t alignItems: 'center',\n\t marginTop: 50,\n\t marginLeft: 20\n             \n  },\n  loginButtonText: {\t\t\n  },\n});\n\nexport default LoginScreen;\n","import React from 'react';\nimport {StatusBar, StyleSheet, Dimensions, Pressable, View, Text, Image } from 'react-native';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport * as RootNavigation from '../RootNavigation.js';\n\nconst newButtonClick = (l) => {\n\tconsole.log('new button clicked');  \n   // RootNavigation.navigate(\"Compose\");\t\n}\n\nconst profileButtonClick = (l) => {\n\tconsole.log('profile button clicked');\n}\n\nconst IconButton = (props) => {\n\t\n\treturn (\n\t<Pressable\n\t   onPress={props.action}\n\t   style={({ pressed }) => [\n          {\n            backgroundColor: pressed\n              ? 'rgb(210, 230, 255)'\n              : props.bgcolor,\n\t\t\t  color: pressed\n              ? '#000'\n              : '#fff'\n          },\n          styles.iconButton\n        ]}\n\t >\n\t  <MaterialCommunityIcons name={props.name}  size={26} style={[{padding: 15},props.style]}/>\n      </Pressable>\n\t);\n};\n\nconst HeaderBar = (props) => {\n\treturn (\n\t <View style={styles.container}>\n\t  <IconButton name='plus' bgcolor='#694fad' action={() => newButtonClick(props.l)} style={styles.newButton}/>\n\t  <View style={{flexDirection: \"column\"}}>\n\t     <View style={styles.mainLogoView}>\n\t         <Text style={styles.mainLogo}>PensionJar</Text>\n\t     </View>\n\t     <View style={styles.screenTitleView}>\n\t\t     <Text style={styles.screenTitle}>{props.children}</Text>\n\t     </View>\n\t  </View>\n\t  <IconButton name='account'  bgcolor='#694fad' action={() => profileButtonClick(props.l)} style={styles.profileButton}/>\n     </View>\t\n\t);\n}\n\nconst styles = StyleSheet.create({\n\n  container: {\n\t   width: Dimensions.get('window').width,\n\tflexDirection: 'row',\n\tjustifyContent: 'space-between',\n\tborderBottomWidth:0.8,\n\tmarginLeft: -15\n  },\n  hc: {\n\t  height: 20,\n\t  overflow: 'hidden',\n\t  padding: 20\n  },\n  newButton: {\n\tcolor: \"#fff\"\n  },\n  profileButton: {\n\t color: \"#fff\"\n  }, \n  logoView: {\n\t \n  },\n  logoText: {\n\t  alignItems: 'flex-end',\n  },\n  mainLogoView: {\n\t  justifyContent: \"center\",\n\t  alignItems: \"center\",\n\t  backgroundColor: '#694fad',\n\t  paddingHorizontal: 10\n  },\n  mainLogo: {\n\t  fontSize: 20,\n\t  color: \"#fff\"\n\n  },\n  screenTitleView: {\n\tjustifyContent: \"center\",\n\talignItems: \"center\",\n\tmarginTop: 5\n},\n  screenTitle: {\n\tfontSize: 16\n  }\n});\n\nexport default HeaderBar;\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginScreen from './LoginScreen.js';\n \nimport HeaderBar from '../components/HeaderBar';\n \n \n const Stack = createStackNavigator();\n\n\nfunction AuthStack(){\n  \n\treturn (\n\t   <Stack.Navigator\n\t    initialRouteName=\"Login\"\t\n\t\tscreenOptions={{\n       // headerTitle: (props) => <HeaderBar {...props} />\n      }}\n\t  >\n\t   <Stack.Screen name=\"Login\" component={LoginScreen} options={{ title: 'Welcome to PensionJar!' }}/>\n\t   </Stack.Navigator>\n\t);\n}\n\n\nexport default AuthStack;","import React, { useState, useEffect, useContext } from 'react';\nimport {Platform, Dimensions, StyleSheet, View, Text, Image, Animated, Pressable} from 'react-native';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport * as helpers from '../Helpers';\nimport UserContext from '../contexts/UserContext';\n\nimport JarvisButton from '../components/JarvisButton';\n\nfunction HomeScreen({navigation}){\n\n    const ctx = useContext(UserContext);\n\t  let navv = navigation;\n    let u = helpers.parseUserData(ctx.u);\n\t\t //console.log(\"uu: \",u);\n\n     const _changePassword = () => {\n      console.log(\"changing password..\");\n    }\n\n    const _signout = () => {\n     console.log(\"signing out..\");\n\n     //clear stored user data\n     helpers.remove(\"pa_atk\");\n     helpers.remove(\"pa_rtk\");\n     helpers.remove(\"pa_u\");\n\n     //clear contexts\n     ctx.setAtk(null);\n     ctx.setRtk(null);\n         ctx.setU(null);\n         ctx.setLoggedIn(false);\n   }\n\n     const items = [\n      {key: 'more-1', caption: \"Change password\", btn: \"Change\", icon: \"form-textbox-password\", play: _changePassword},\n      {key: 'more-2', caption: \"Sign out of your account\", btn: \"Sign out\", icon: \"logout\", play: _signout},\n     ];\n    \n\t\t \n    return (\n\t\t<View style={styles.container}>\n      <View style={styles.avatarView}>\n         <Image style={styles.avatar} source={{uri: u.img}}/>\n         <Text style={styles.avatarName}>{u.fname + \" \" + u.lname}</Text>\n         <Text style={styles.avatarEmail}>{u.email}</Text>\n      </View>\n      <Text style={styles.sectionTitle}>Settings</Text>\n      <View style={styles.settingsView}>\n        {\n          items.map( i => (\n            <View key={i.key} style={[styles.settingsRow]}>\n               <MaterialCommunityIcons style={{marginRight: 10}} name={i.icon} color=\"#694fad\" size={26} />\n               <Text style={{marginRight: 10}}>{i.caption}</Text>\n               <JarvisButton\n                style={{marginLeft: 50}}\n                bgcolor=\"#694fad\"\n                 play={i.play}\n                 btn={i.btn}\n               />\n         </View>\n        ))\n        }\n      </View>\n\t  </View>\n    );\n  \n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    //justifyContent: 'center',\n  },\n  avatarView: {\n    justifyContent: \"center\",\n    alignItems: \"center\", \n    marginTop: 20\n  },\n  avatar: {\n    height: 80,\n    width: 80,\n    borderRadius: 40\n  },\n  avatarName: {\n    fontSize: 24,\n    marginTop: 10\n  },\n  avatarEmail: {\n    fontSize: 18,\n    color: \"#dedede\",\n    marginTop: 5\n  },\n  sectionTitle: {\n    fontSize: 18,\n    color: \"#dedede\",\n    marginTop: 95,\n    marginLeft: 5\n  },\n  settingsView: {\n     alignItems: 'flex-start',\n     borderTopColor: \"#dedede\",\n     borderTopWidth: 1,\n     marginTop: 5,\n     paddingTop: 10\n  },\n  settingsRow: {\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    marginVertical: 10,\n    justifyContent: \"space-between\"\n  }\n});\n\nexport default HomeScreen;\n\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from './HomeScreen.js';\n \nimport HeaderBar from '../components/HeaderBar.js';\n \n \n const Stack = createStackNavigator();\n\n\nfunction AppStack(){\n  \n\treturn (\n\t   <Stack.Navigator\n\t    initialRouteName=\"Home\"\t\n\t\tscreenOptions={{\n        headerTitle: (props) => <HeaderBar {...props} />\n      }}\n\t  >\n\t   <Stack.Screen name=\"Dashboard\" title=\"Profile\" component={HomeScreen} />\n\t   </Stack.Navigator>\n\t);\n}\n\n\nexport default AppStack;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {Platform, StyleSheet, View, Pressable, Modal, Text, TextInput, Dimensions, ScrollView, Button} from 'react-native';\nimport * as AuthSession from 'expo-auth-session';\nimport * as helpers from '../Helpers';\nimport UserContext from '../contexts/UserContext';\n\nfunction MoreScreen(){\n\t\n\tconst ctx = useContext(UserContext);\n\tconst pp = () => {\n\t\tconsole.log(\"moving..\");\n\t}\n\tconst [isSMVisible, setIsSMVisible] = useState(false);\n    const [button1TextColor, setButton1TextColor] = useState(\"#fff\");\n    const [button1Background, setButton1Background] = useState(\"orange\");\n    const [button2TextColor, setButton2TextColor] = useState(\"#fff\");\n    const [button2Background, setButton2Background] = useState(\"green\");\n\t\n\tconst confirmSignout = () => {\n\t\tsetIsSMVisible(true);\n\t}\n\t\n\tconst test = async () => {\n          await helpers.schedulePushNotification();\n        }\n\t\t\n\t\tconst signout = async () => {\n\t\n\ttry {\n\t  AuthSession.dismiss();\n    } catch (error) {\n      console.error(error);\n    }\n}\n\t\n\tconst items = [\n\t {key: 'more-3', caption: \"View information about the app.\", btn: \"About\", play: pp},\n\t {key: 'more-4', caption: \"Sign out of your account\", btn: \"Sign out\", play: confirmSignout},\n\t];\n    \n\treturn (\n\t   <View style={styles.container}>\n\t    <Text style={styles.caption}>More options</Text>\n\t\t  {\n\t\t\titems.map(i => ( \n\t        <View key={i.key} style={styles.item}>\n\t\t\t   <Text style={{marginRight: 1}}>{i.caption}</Text>\n               <Pressable\n\t\t\t  onPress={() => {\n              /** Do Something **/\n\t\t\t  console.log(\"moving..\");\n\t\t\t  i.play();\n             }}\n             style={{width:80,height:40}}\n           >\n\t\t     <View style={[styles.loginButton,{backgroundColor: \"#694fad\"}]}>\n\t\t\t\t <Text style={[styles.loginButtonText,{color: \"#fff\"}]}>{i.btn}</Text>\n\t\t\t </View>\n           </Pressable>\n\t\t\t   \n\t\t\t</View>\n\t\t\t))\n\t\t  }\n\t\t  \n\t\t   <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={isSMVisible}\n        onRequestClose={() => {\n          //Alert.alert('Modal has been closed.');\n        }}>\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalText}>Are you sure?</Text>\n             <View style={{flexDirection: 'row', justifyContent: 'space-between',}}>\n             <Pressable\n\t\t\t  onPress={() => {\n              /** Do Something **/\n\t\t\t  console.log(\"moving..\");\n\t\t\t  setButton1Background(\"#fff\");\n\t\t\t  setButton1TextColor(\"orange\");\n\t\t\t  setTimeout(() => {\n\t\t\t\tsetButton1Background(\"orange\");\n\t\t\t\tsetButton1TextColor(\"#fff\");\n\t\t\t  },700);\n\t\t\t  signout();\n             }}\n             style={{width:80,height:40}}\n           >\n\t\t     <View style={[styles.button,{backgroundColor: button1Background}]}>\n\t\t\t\t <Text style={{color: button1TextColor}}>Yes</Text>\n\t\t\t </View>\n           </Pressable>\n           <Pressable\n\t\t\t  onPress={() => {\n              /** Do Something **/\n\t\t\t  console.log(\"moving..\");\n\t\t\t  setButton1Background(\"#fff\");\n\t\t\t  setButton1TextColor(\"green\");\n\t\t\t  setTimeout(() => {\n\t\t\t\tsetButton1Background(\"green\");\n\t\t\t\tsetButton1TextColor(\"#fff\");\n\t\t\t  },700);\n              setIsSMVisible(false);\n             }}\n             style={{width:80,height:40}}\n           >\n\t\t     <View style={[styles.button,{backgroundColor: button1Background}]}>\n\t\t\t\t <Text style={{color: button1TextColor}}>No</Text>\n\t\t\t </View>\n           </Pressable>\n\t\t   </View>\n          </View>\n        </View>\n      </Modal>\n\t   </View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n\tbackgroundColor: '#fff',\n\t//marginTop: StatusBar.currentHeight || 0,\n\twidth: '100%',\n\theight: '100%',\n\tflex: 1\n  },\n  item: {\n\t  flex: 1,\n    padding: 3,\n\tflexDirection: 'row',\n\tbackgroundColor: '#fff',\n\tjustifyContent: 'space-between',\n  },\n    caption: {\n    fontSize: 18,\n\tfontWeight: \"bold\",\n\t//marginTop: StatusBar.currentHeight || 0,\n\t//marginBottom: StatusBar.currentHeight || 0,\n  },\n    centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n  },\n    modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 50,\n    padding: 20,\n    color: \"#fff\",\n    width: Dimensions.get('window').width-20\n            \n },\n});\n\nexport default MoreScreen;\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MoreScreen from './MoreScreen.js';\n \nimport HeaderBar from '../components/HeaderBar.js';\n \n \n const Stack = createStackNavigator();\n\n\nfunction MoreStack(){\n  \n\treturn (\n\t   <Stack.Navigator\n\t    initialRouteName=\"More\"\t\n\t\tscreenOptions={{\n        headerTitle: (props) => <HeaderBar {...props} />\n      }}\n\t  >\n\t   <Stack.Screen name=\"More\" component={MoreScreen} />\n\t   </Stack.Navigator>\n\t);\n}\n\n\nexport default MoreStack;\n","//import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { Platform, StyleSheet, View, Text, SafeAreaView } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport NetInfo from '@react-native-community/netinfo';\nimport { navigationRef } from './RootNavigation.js';\nimport FlashMessage, { showMessage, hideMessage } from \"react-native-flash-message\";\nimport * as WebBrowser from 'expo-web-browser';\nimport AppIntroSlider from 'react-native-app-intro-slider';\n\nimport * as Notifications from 'expo-notifications';\nimport * as helpers from './Helpers'; \nimport { UserProvider } from './contexts/UserContext';\n\nimport AuthStack from './navigation/AuthStack';\nimport AppStack from './navigation/AppStack';\nimport MoreStack from './navigation/MoreStack';\n\nconst Tab = createMaterialBottomTabNavigator();\n \nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\nWebBrowser.maybeCompleteAuthSession();\n\nexport default function App() {\n  const [isAppReady, setIsAppReady] = useState(false);\n  const [showApp,setShowApp] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [u, setU] = useState(null);\n  const [name, setName] = useState(null);\n  const [atk, setAtk] = useState(null);\n  const [rtk, setRtk] = useState(null);\n  const [etk, setEtk] = useState('');\n\tconst [online, setOnline] = useState(false);\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n  let s = null, nm = \"\", ntt = \"\";\n\n   //Development config\n   const Auth0_Domain = \"https://pensionjar-development.eu.auth0.com\";\n   const Auth0_ClientID = \"LFi1MZQxXQW4Y1vMhEOXN7Sy11naYTcF\";\n const Auth0_ClientSecret = \"b8fUvWYThhkLxOf4d_UsGLBayfl1pCnQTkll9U8qtHrB6VPyFsfeIH7CRdcKhh9-\";\n\n /**\n //Staging config\n   const Auth0_Domain = \"https://pensionjar-staging.eu.auth0.com\";\n   const Auth0_ClientID = \"PAQK5rFTPu2jdg2rSM4I0Nwjcwk8XWkI\";\n const Auth0_ClientSecret = \"_-NCxLhpJlg5q8J6K2LYKyi_1CNu8uwbrU-X0s3IkxiLj3jhCjF37FdquZK78gUM\";\n   **/\n\n\n  const data = [\n\t\t{\n\t\t  title: 'Title 1',\n      icon: \"cash\",\n\t\t  copy: \"This is the copy for the first slide\",\n\t\t  bg: '#59b2ab',\n\t\t},\n\t\t{\n\t\t  title: 'Title 2',\n      icon: \"cash-register\",\n\t\t  copy: \"This is the copy for the second slide\",\n\t\t  bg: '#febe29',\n\t\t},\n\t\t{\n\t\t  title: 'Title 3',\n      icon: \"cash-multiple\",\n\t\t  copy: \"This is the copy for the third slide\",\n\t\t  bg: '#22bcb5',\n\t\t},\n\t  ];\n\n   const _renderItem = item => {\n      let ii = item.item;\n      const webStyle = Platform.OS == \"web\" ? {height: \"100%\"} : null;\n      \n      return (\n        <View style={[styles.slide,{backgroundColor: ii.bg},webStyle]}>\n            <MaterialCommunityIcons name={ii.icon} color=\"#fff\" size={200} />\n            <Text style={styles.title}>{ii.title}</Text>\n            <Text style={styles.copy}>{ii.copy}</Text>\n        </View>\n      );\n    };\n  \n   const _keyExtractor = item => item.title;\n\n\n  const subscribeToNetworkChanges = NetInfo.addEventListener(state => {\n    s = state.isInternetReachable;\n      if(s != online){\n      setOnline(s);\n      if(!s){\n       nm = \"Your device is offline\", ntt = \"danger\";\n      }\n       /**\n         showMessage({\n              message: nm,\n              type: ntt,\n            });\n        **/\n      }\n  });\n  \n  \n    let ctx = {\n          loggedIn: loggedIn,\n          setLoggedIn: setLoggedIn,\n          etk: etk,\n          setEtk: setEtk,\n          atk: atk,\n          setAtk: setAtk,\n          rtk: rtk,\n          setRtk: setRtk,\n          u: u,\n          setU: setU,\n          online: online,\n          setOnline: setOnline\n        };\n    \n    useEffect(() => {\n      async function prepare() {\n        try {\n          //make any API calls you need to do here\n      let rtk = await helpers.getValueFor(\"pa_rtk\"), firstView = await helpers.getValueFor(\"pa_first_view\");\n      let uu = null, credentials = null;\n      \n      if(firstView && firstView == \"false\") setShowApp(true);\n      \n      try {\n      // Retrieve the credentials\n      uu = await helpers.getValueFor(\"pa_u\");\n      if(uu)\n     {\n        if(rtk != null && uu != null){\n          //get auth0 access token using refresh token\n          let refreshTokenData = {\n            grant_type: \"refresh_token\",\n            client_id: Auth0_ClientID,\n            refresh_token: rtk\n          };\n          let url = `${Auth0_Domain}/oauth/token`;\n          \n          const req = new Request(url,{\n            method: 'POST', \n           headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n           },\n           body: helpers._urlEncode(refreshTokenData)\n            });\n          let response2 = await fetch(req);\n          let dt = await response2.json();\n          console.log(\"dt from App.js: \",dt);\n           helpers.save('pa_atk',dt.access_token);\n           helpers.save('pa_rtk',dt.refresh_token);\n           setAtk(dt.access_token);\n           setU(JSON.parse(uu));\n           setLoggedIn(true);\n      }\n      }\n      else\n      {\n         console.log('No credentials stored');\n      }\n    }\n   catch (error) {\n      console.log(\"An error occured:\", error);\n    }\n  \n      \n          // Artificially delay for two seconds to simulate a slow loading\n          // experience. Maybe remove this in production..\n          await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      \n      try{\n        // Unsubscribe to these updates:\n            subscribeToNetworkChanges();\n      }\n      catch(e){\n        console.warn(e);\n      }\n    \n      \n        } catch (e) {\n          console.warn(e);\n        } finally {\n          // Tell the application to render\n          setIsAppReady(true);\n        }\n      }\n  \n      prepare();\n    }, []);\n    \n    useEffect(() => {\n      if(online){\n      helpers.registerForPushNotificationsAsync().then(token => {\n      //alert('About to get push token for push notification!');\n    \n      //alert(`etk in registerForPushNotificationsAsync: ${token}`);\n      });\n  \n      notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n        setNotification(notification);\n      });\n  \n      responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n        console.log('response: ',response);\n      });\n  \n      return () => {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n        Notifications.removeNotificationSubscription(responseListener.current);\n      };\n      }\n    }, [online]);\n\n  \n  let irn = loggedIn ? \"AppStack\" : \"AuthStack\";\n\n  if(showApp){\n    return (\n      <UserProvider value={ctx}>\n    <NavigationContainer ref={navigationRef}>\n       <Tab.Navigator\n       initialRouteName={irn}\n         activeColor=\"#f0edf6\"\n         inactiveColor=\"#3e2465\"\n         barStyle={{ backgroundColor: '#694fad' }}\n             \n     >\n     {loggedIn ? (\n     <>\n     <Tab.Screen\n         name=\"AppStack\"\n         component={AppStack}\n         options={{\n           tabBarLabel: 'Dashboard',  \n           tabBarIcon: ({ color }) => (\n             <MaterialCommunityIcons name=\"view-dashboard\" color={color} size={26} />\n           ),\n         }}\n       />\n       <Tab.Screen\n         name=\"MoreStack\"\n         component={MoreStack}\n         options={{\n           tabBarLabel: 'More',  \n           tabBarIcon: ({ color }) => (\n             <MaterialCommunityIcons name=\"dots-horizontal-circle\" color={color} size={26} />\n           ),\n         }}\n       />\n       \n     </>\n     \n     ) : (\n      <Tab.Screen\n         name=\"AuthStack\"\n         component={AuthStack}\n         options={{\n           tabBarLabel: 'Login',\n           tabBarIcon: ({ color }) => (\n             <MaterialCommunityIcons name=\"account\" color={color} size={26} />\n           ),\n         }}\n       />\n     )}\n        \n       </Tab.Navigator>\n     </NavigationContainer>\n     <StatusBar style=\"auto\" />\n       <FlashMessage position=\"bottom\" /> \n      </UserProvider>\n    );\n  }\n  else{\n    return (\n      <>\n      <View style={{flex: 1}}>\n        <StatusBar translucent backgroundColor=\"transparent\" />\n        <AppIntroSlider\n          keyExtractor={_keyExtractor}\n          renderItem={_renderItem}\n          bottomButton\n          showSkipButton\n          showPrevButton\n          data={data}\n          onDone={() => {setShowApp(true); helpers.save(\"pa_first_view\",\"false\");}}\n        />\n      </View>\n      <StatusBar style=\"auto\" />\n      </>\n    );\n }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  slide: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 96, // Add padding to offset large buttons and pagination in bottom of page\n  },\n  title: {\n    fontSize: 22,\n    color: 'white',\n    textAlign: 'center',\n    marginTop: 10\n  },\n  copy: {\n    fontSize: 18,\n    color: 'white',\n    textAlign: 'center',\n    marginTop: 10\n  },\n});\n"],"sourceRoot":""}